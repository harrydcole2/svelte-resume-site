{
  "demos": [
    {
      "id": 1,
      "title": "Blackjack Game",
      "subtitle": "JS/CSS/HTML Startup",
      "text": "This is a vanilla JS/CSS/HTML project I used to learn about web development and get exposure to different kinds of web technologies from the ground up. As the name suggests, the business logic is a blackjack simulator that you can bet pseudo money against. It taught me a lot about the DOM and events in the browser. You can login/register, see others earnings online (via websockets), look at a scoreboard, and play blackjack (of course).",
      "href": "https://startup.harrisondcole.click"
    },
    {
      "id": 2,
      "title": "Simon Game",
      "subtitle": "React.js Demo",
      "text": "This is a React.js project that mimics the classic Simon game. It was my first exposure to React, and actually started as a vanilla project so that we could understand its roots. More than anything, it act as a great resource for understanding how projects are built and deployed and the elements that go into a good web application. While Simon is a simple concept, there are a lot of features in the site that are added as examples of something more scalable, e.g. working with sound, making requests to an API, communication between users, etc.",
      "href": "https://simon.harrisondcole.click"
    }
  ],
  "projects": [
    {
      "id": 1,
      "title": "Celebrate Life Co.",
      "body": "One of my most extensive projects is the website of Celebrate Life Co, which is a tech startup aimed at automating some of the processes related to grave sites and documenting memorials to those who have passed on. The site maps out where graves are located, allows users to create online tributes to accompany grave sites, and has an extensive collection of articles and resources for writing tributes. Partners can create their own maps and have their own landing page through the site. I was the primary fullstack developer for this project, which uses a C# Backend, a React.js Frontend, and a Postgres database with all the bells and whistles. I also got to participate in writing the issues and creating the designs for the project. I would call it some of my best programming to date.",
      "href": "https://www.celebratelifeco.com/",
      "images": ["clife_1.png", "clife_2.png", "clife_3.png"],
      "dir": "/clife"
    },
    {
      "id": 2,
      "title": "Otterstrom Family Migration Research",
      "body": "While working as a web developer at BYU, I built a website that queries the FamilySearch API for information about migration patterns. You could search for up to 5000 records from a particular nation, state, county, or city, then determine where up to 8 generations of ancestors or descendents were born, married, or died. The results would then be mapped out and statistics would be generated for them. The site was used to publish research at a few conferences. This project taught me a lot about APIs (FamilySearch and Google Maps primarily) and managing large datasets. Because the computations could take a long time, I also learned about how to optimize algorithms.",
      "href": "https://otterfmr.byu.edu/p/login",
      "images": ["fmr_1.png", "fmr_2.png", "fmr_3.png", "fmr_4.png"],
      "dir": "/otterFMR"
    },
    {
      "id": 3,
      "title": "Redd Center Grants",
      "body": "BYU offers a variety of scholarships and grants for research opportunities in the humanities. At the Mary Lou Fulton conference, students are able to present their work and receive feedback from their peers and mentors, and the Redd Center is a big piece of the funding for this event and the research that comes of it. I helped build a website that allows the center to post grants, accept applications, and judge those applications remotely. The hardest piece of this project was the dynamic form that determined the application fields for various grants, and making that experience intuitive for the administrators. Built with a React frontend and Java backend.",
      "href": "https://reddcentergrants.byu.edu",
      "images": ["redd_1.png", "redd_2.png", "redd_3.png"],
      "dir": "/reddCenter"
    },
    {
      "id": 4,
      "title": "DevOps Days Boise App",
      "body": "One of my first programming projects was to build a website for DevOps Days Boise. The site was built with C# and Xamarin Forms as part of an internship I participated in before I began college. It is where I really developed a passion for programming. The app was used to manage the conference schedule, speakers, and sponsors. It was a great experience to work with a team and to see the project through from start to finish. I learned a lot about the importance of communication and collaboration, and I was able to see the impact that a well-designed website can have on an event.",
      "href": "",
      "images": ["devOps_1.png", "devOps_2.png", "devOps_3.png"],
      "dir": "/devOpsDays"
    },
    {
      "id": 5,
      "title": "MRI Research Facility",
      "body": "BYU has an MRI machine in the McDonald Building, and it requires a lot of coordination to keep it running. In this app, I helped fix problems with the scheduling and training pages on this application and refactored the code so that it would be more maintainable/extendable. It was also an application that I used to onboard another developer with our patterns and conventions. This site was made with Java, React, and PostgreSQL.",
      "href": "https://mri.byu.edu",
      "images": ["mri_1.png", "mri_2.png", "mri_3.png"],
      "dir": "/mri"
    }
  ],
  "ideas": [
    {
      "id": 1,
      "title": "Custom Minesweeper Solver",
      "text": "I probably am somewhere in the top 1% of minesweeper players. When I am distracted or need to think, I play (and often don't finish haha). I think it would be interesting to make a minesweeper variant and solver with different shapes and patterns, and different game permutations (maybe even 3-D if I can make the GUI intuitive). Once I've established the rules and all the architecture, I want to build a model to solve it, either intuitively or with some machine learning. Something I've noticed in regular minesweeper is that some game permutations are impossible to solve without chance and that others are intentionally rare/removed to make the board solvable more frequently, so it would be interesting to mess with these \"dials\" to see test out what happens in my variant."
    },
    {
      "id": 2,
      "title": "Zettelkasten App",
      "text": "The Zettelkasten Method is a particular way to organize notes created by Niklas Luhmann in the 1950s. The idea is to create a web of small notes that link together in a graphical manner through tabs and note coordinates. Definitely worth a google if you are interested. There are some platforms for creating linked notes, but I think they are a too complex and hard to navigate effectively online. I think it would be interesting to create a simple, intuitive, and visually appealing web app that allows you to create and link notes graphically, like on a Zettelkasten whiteboard."
    },
    {
      "id": 3,
      "title": "Pagable \"Wrapper\" for Instagram",
      "text": "Studies show that one of the key reasons that people get adicted to social media is because of infinite scrolling. There is no clear signal to the brain to stop. There is some evidence that by implementing some kind of paging similar to google search results, people spend less time on social media, sort of by messing with the experience. As far as I can tell nothing like this exists yet, and that may be because the API isn't exposed or something, but it would be worthwhile to figure out what such a project what take and it could make a difference for people who give it a try. Maybe it could be a wrapper of any website or app?"
    },
    {
      "id": 4,
      "title": "LDS Notes Script and GUI App",
      "text": "When you have a lot of notes and quotes in a scripture app like LDS library, it is hard to keep track of them and view/sort them in an reliable way. But you can download a CSV of your notes for the LDS app (and other established ones too). they already have tags, text, and other things in that CSV, and I think it would be interesting to make a GUI tool for your CSV notes that allows you to filter, search, and view them better than you can natively in the app. I am thinking that you could update your GUI against your current CSV with some kind of script that checks the old CSV against the new one to refresh your GUI tool as needed. I would be curious if there is an API I could use to automate the process on login."
    },
    {
      "id": 5,
      "title": "Custom Basketball Statistics App",
      "text": "I love basketball and when march madness or the playoffs come around, I watch them religiously. It's also fun to compare stats and I'm always amazed at the totally random ones in my feed. There are lots of APIs to access basketball stats. My idea would be to make an app that allows you to request statistics for players and turn them into custom proportions or new statistics. It would be similar to a family search app I worked on."
    },
    {
      "id": 6,
      "title": "Google Maps API Project",
      "text": "There are a lot of cool things you can do with Google maps, and I think it would be fun to test the limits. Maybe a map that fills in as you travel with an accompanying journal, a marco polo game that pings devices with distances/directions, a treasure hunt game that takes you to the biggest places in a town, a geocaching app if it has some kind of API exposed, or a location based chatroom of sorts."
    },
    {
      "id": 7,
      "title": "Political Tracker Framework",
      "text": "Politics is a tricky thing and good knowledge on it is hard to come by. I'm not sure a tech solution is the right one, but I definitely have wished there was a way to actually know the details of what our representatives were doing and how they voted. In the realm of sports we have timelines, career statistics, and more available on the NBA app, on the tennis app, on any sports app you can really think of. What if we had that same kind of objective focus on politians that we have on our athletes? Would that be good or bad, and how would it be received? I wouldn't be able to maintain this app but I have thought about creating the infrastructure for something like this and it could be interesting. Maybe add some AI fact checking too."
    },
    {
      "id": 8,
      "title": "Ranker Dating App",
      "text": "Ranker is sort of a running joke for my family, who sometimes jokingly quip that people should only date people in their own league. The idea of the Ranker dating app is to actually make that a reality by having people apply and actually be quote-on-quote professionally (AI or friends survey?) ranked according to a category (a number feels bad) and find a match in that niche. Those ranks and matches could potentially be crowdsourced (by moms?). Not a commercial product but could be fun practice."
    },
    {
      "id": 9,
      "title": "VS Code Commments Extension",
      "text": "In VS Code, I think it would be potentially useful to have comments that you could toggle on and off for a file as a lightweight way to explain code to peers without overdoing it and not explaining things that aren't necessary. It would also be nice to give formatting to those comments. I don't know if that could be handled via extension or via an editor fork, but I think it could contribute to maintaining good code. I think it would be cool if those comments were all compacted into a single file that the editor could read and distribute to the code itself when you are in the editor (similar to git notifications)."
    },
    {
      "id": 10,
      "title": "Better Swagger GUI Middleware in .NET",
      "text": "In my experience and the experience of many developers, swagger's authentication for endpoints can be tedious because it doesn't streamline the process of getting auth tokens and doesn't save anything between runs. For that reason, many people have turned to Postman which is a great resource too, but can be a little time intensive to set up when you have a lot of endpoints to manage and test. Would be interesting to see what part of this problem I could address with a middleware built on top of Swagger (which I am not sure other than I think it is open source)."
    },
    {
      "id": 11,
      "title": "EF Core ERD on Default Relationships",
      "text": "EF Core is a code first approach to managing a .NET database by generating a migrations stack. It works by scanning your entity code for properties and relationships it can use to derive SQL relationships behind the scenes. Those relationships would be great to turn into an interactive domain model graph, similar to how Mendix's domain model works. If I get it right, it could help debug problems in the database and it would help me really master EF core. Alternative ERD tools exist, but I don't like them very much and transitioning between them is non-trivial."
    },
    {
      "id": 12,
      "title": "GPT Extention for OneNote (or note alternative)",
      "text": "In a modern class setting, students frequently use ChatGPT when they are taking notes, especially about jargin they may not understand. If you could have a small query from ChatGPT fill the size of a OneNote textbox, it could serve as a side note to whatever a student is learning in class and supplement the material they use to review for a test. It could help integrate AI into the learning process."
    },
    {
      "id": 13,
      "title": "Fish Investing",
      "text": "I think it would be cool to invest in a few penny stocks based on the movements of a fish or animal migrations (Movebank API) or something along those lines. Nothing really serious should be at stake with this, but it could make for a curious mix of software and hardware. It would be a good test of whether your fish is lucky."
    },
    {
      "id": 14,
      "title": "Recipe Collection",
      "text": "Scan in your recipes and share them with friends and family through a convenient recipe site! The website would scan in pictures and ask you to correct parts that it couldn't make out with manually via ML. Those recipes would then be standardized in a particular layout and shared throughout the site. You could add collections too, such as a family cookbook that you want to save forever. Other features could include searching by ingredients or rating recipes."
    },
    {
      "id": 15,
      "title": "A Fake AI News Site",
      "text": "My idea would be to use an AI endpoint with news prompts to generate dozens of fake images and articles on a presentable news site and requery them each night. Obviously, I would inform everyone that the articles are fake, but it would be interesting to see what it could come up with and how realistic those articles look if I create the styling."
    },
    {
      "id": 16,
      "title": "Public Holiday API",
      "text": "Each day is a holiday in some respect or another, even if its not a major holiday. There are APIs for them that you can query for data about holidays against dates and make that into a presentable form, then come up with some activities for those holidays. Frankly, this is a stand-in for working with any free API out there, which would follow the same sort of recipe. If you wanted to get really meta, you could make a more universal GUI for free APIs of a particular format."
    },
    {
      "id": 17,
      "title": "Transfer Playlists between Spotify/Apple Music",
      "text": "Spotify and Apple Music are two of the leaders in the music industy, but sharing playlists between them has always been clunky. The solutions out there are hard-to-use. I know Spotify's API is free with an account and Apple's API is likewise exposed, but it is unclear whether the data would transfer in any meaningful way. The point of reference for this is Shazam, which seems capable of publishing on both platforms."
    }
  ],
  "resources": [
    {
      "title": "Frontend Technologies",
      "description": "Essential tools and libraries for frontend development",
      "items": [
        {
          "title": "JS Frameworks (Vite supported)",
          "description": "React • Angular • Vue • Svelte (w/ Kit) • \"Vanilla\""
        },
        {
          "title": "Styling Paradigms",
          "description": "CSS/SCSS • MUI • Styled Components • Iconify • Fluent UI • Bootstrap/Reactstrap • Tailwind"
        },
        {
          "title": "State Management (Global, Server, etc.)",
          "description": "Redux • Flux • Context API • React Router • ReactQuery w/ Axios • React Hook Form • Formik • Yup/Zod • XState • Immer"
        },
        {
          "title": "Extension Libraries",
          "description": "GoogleMaps • Mapbox w/ ReactMap GL • Stripe • Shippo • Replicache • Anime.js • Three.js • Framer Motion • Chart.js • D3.js • LoDash • Moment.js/date-fns • Websockets • Apexcharts • Dropzone • Notistack • React Lightbox • Simplebar • React Quill • React Markdown"
        },
        {
          "title": "Testing",
          "description": "Jest • Selenium • JSON Server • Bacon Ipsum • Random User • HotJar • Google Analytics • Pingdom"
        },
        {
          "title": "Web Certificate and Servers",
          "description": "Caddy, Let's Encrypt w/ Certbot, Nginx, Apache • Cloud Providers (Vercel, AWS, Azure, etc.)"
        }
      ]
    },
    {
      "title": "Backend and Cloud Technologies",
      "description": "Powerful tools for server-side development",
      "items": [
        {
          "title": "Endpoint Frameworks",
          "description": "C# w/ .NET API • Node.js ⇔ Express.js • Python Flask/Django • Serverless (Lambdas, Gateway, etc.)"
        },
        {
          "title": "Databases",
          "description": "EF Core • PostgreSQL (PgAdmin) • MySQL • MongoDB • DynamoDB • Redis"
        },
        {
          "title": "API Tools",
          "description": "Postman • Swagger • JWT.io • OAuth • Odata Query • Curl • Hangfire (CronGuru) • Regex101"
        },
        {
          "title": "Containerization, Virtualization",
          "description": "Docker • Kubernetes • Localstack • Helm"
        },
        {
          "title": "Cloud Services",
          "description": "Route53 • API Gateway • AWS Lambda • Elastic Beanstalk • Cloudfront • S3 Buckets • Terraform"
        }
      ]
    },
    {
      "title": "Business Tools",
      "description": "Essential tools for managing a business",
      "items": [
        {
          "title": "Design",
          "description": "Figma • Adobe XD • Canva • Storybook • Draw.io • Lucidchart • Miro • Paletton • Coolors • Toptal Subtle Patterns • UI Design Daily"
        },
        {
          "title": "Project Management",
          "description": "Git • GitHub • Bitbucket • Jira • Trello • Monday • ServiceNow • Microsoft Teams • Slack • Kanban • Scrum"
        },
        {
          "title": "Employee Education",
          "description": "Pluralsight • Udemy • Coursera • LinkedIn Learning • Codecademy • State of JS • Dev.to • Daily.dev"
        },
        {
          "title": "Sales and Marketing",
          "description": "Google Ads • Facebook Ads • LinkedIn Navigator • Mailchimp • Hubspot • Google Analytics • HotJar • SEO Content"
        }
      ]
    }
  ]
}
